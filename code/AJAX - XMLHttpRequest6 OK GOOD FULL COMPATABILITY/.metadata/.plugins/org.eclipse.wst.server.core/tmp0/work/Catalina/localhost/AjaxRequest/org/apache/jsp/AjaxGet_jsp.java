/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.6
 * Generated at: 2018-04-24 03:12:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class AjaxGet_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta    http-equiv  =\"Content-Type\" \r\n");
      out.write("         content     =\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\t");
  
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<h3>Ajax Request</h3>\r\n");
      out.write("\t\t<p name=\"a\"></p>\r\n");
      out.write("\t\t<p name=\"b\"></p>\r\n");
      out.write("\t\t<p name=\"c\"></p>\r\n");
      out.write("\t\t<p name=\"d\"></p>\r\n");
      out.write("\t\t<p name=\"e\"></p>\r\n");
      out.write("\t\t<p name=\"f\"></p>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<script language=\"javascript\" type=\"text/javascript\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tvar ajaxrequest;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfunction initajax() {\r\n");
      out.write("\t\t\t\t//IE\r\n");
      out.write("\t\t\t\t//try {\r\n");
      out.write("\t\t\t\t\t/*\txmlHttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n");
      out.write("\t\t\t\t\t             这句话是一般是为IE浏览器创建建ajax引擎的，IE不支持所有要先创建，前面会有个判断语句，支持Ajax的浏览器就不需要创建，要判断下的  \r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t这行简单的代码在 Mozilla、Firefox、Safari、Opera 以及基本上所有以任何形式或方式支持 Ajax 的非 Microsoft 浏览器中，\r\n");
      out.write("\t\t\t\t\t\t创建了 XMLHttpRequest 对象。但是对于市场占有率达到70%的IE来说，这种方法是不行的，而不同的IE版本还有不同的创建方法，\r\n");
      out.write("\t\t\t\t\t\t所以我们需要在IE下面使用下面两种创建对象的办法：\r\n");
      out.write("\t\t\t\t\t */\r\n");
      out.write("\t\t\t\t\t//针对较新的浏览器\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t/*\r\n");
      out.write("\t\t\t\t\tajaxrequest = new ActiveXObject(\"Msxml2.XMLHTTP\");\r\n");
      out.write("\t\t\t\t\tdocument.write( \"<span style=\\\"color:#C11;\\\">Browser is New Version Internet Explorer.</span>\");\r\n");
      out.write("\t\t\t\t} catch (e) {\r\n");
      out.write("\t\t\t\t\t*/\r\n");
      out.write("\t\t\t\t\tvar iemark =false;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//针对较老的浏览器\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t            var versions=\r\n");
      out.write("\t\t            ['Microsoft.XMLHTTP' ,'MSXML.XMLHTTP'     ,'Msxml2.XMLHTTP.7.0','Msxml2.XMLHTTP.6.0',\r\n");
      out.write("\t\t             'Msxml2.XMLHTTP.5.0','Msxml2.XMLHTTP.4.0','MSXML2.XMLHTTP.3.0','Msxml2.XMLHTTP'    ];\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t            for(var i=0; i < versions.length; i++){\r\n");
      out.write("\t\t                try{\r\n");
      out.write("\t\t                \tdocument.write( \"attempt version : \" + versions[i] + \"<br />\" );\r\n");
      out.write("\t\t                \tajaxrequest = new ActiveXObject(versions[i]);\r\n");
      out.write("\t\t                \t\r\n");
      out.write("\t\t                \tdocument.write( \"Browser Support.\" + \"<br />\" );\r\n");
      out.write("\t\t                \tiemark = true;\r\n");
      out.write("\t\t                \tif(versions[i] == \"Msxml2.XMLHTTP\") {\r\n");
      out.write("\t\t                \t\tdocument.write( \"<span style=\\\"color:#C11;\\\">Browser support new version IE.</span>\" + \"<br />\" );\r\n");
      out.write("\t\t                \t} else {\r\n");
      out.write("\t\t                \t\tdocument.write( \"<span style=\\\"color:#C11;\\\">Browser support old version IE.</span>\" + \"<br />\" );\r\n");
      out.write("\t\t                \t}\r\n");
      out.write("\t\t                }catch(e){\r\n");
      out.write("\t\t                \tdocument.write( \"Error Occurs.\" + \"<br />\" );\r\n");
      out.write("\t\t                }\r\n");
      out.write("\t\t            }\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t            if(iemark) {\r\n");
      out.write("\t\t            \tdocument.write( \"<span style=\\\"color:#C11;\\\">Browser is Internet Explorer.</span>\" + \"<br />\" );\r\n");
      out.write("\t\t            } else {\r\n");
      out.write("\t\t\t\t\t\tdocument.write( \"Browser is not Internet Explorer.\" + \"<br />\" );\r\n");
      out.write("\t\t\t\t\t\ttry {\r\n");
      out.write("\t\t\t\t\t\t\tajaxrequest = new XMLHttpRequest();\r\n");
      out.write("\t\t\t\t\t\t\tdocument.write( \"<span style=\\\"color:#C11;\\\">Browser Version is Opera8.0+ , FireFox , Safari.</span>\" + \"<br />\" );\r\n");
      out.write("\t\t\t\t\t\t} catch (e) {\r\n");
      out.write("\t\t\t\t\t\t\tdocument.write( \"no such a browser support.\" + \"<br />\" );\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t            } \r\n");
      out.write("\t\t         \r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfunction ajaxrequest() {\r\n");
      out.write("\t\t\t\tinitajax();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tajaxrequest();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
